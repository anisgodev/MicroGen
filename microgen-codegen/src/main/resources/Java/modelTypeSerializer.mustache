package {{package}};

{{#models}}{{#model}}
public class {{classname}}Serializer
        implements javax.json.bind.serializer.JsonbSerializer<{{classname}}>, javax.json.bind.serializer.JsonbDeserializer<{{classname}}> {

    @Override
    public void serialize(
            {{classname}} obj,
            javax.json.stream.JsonGenerator generator,
            javax.json.bind.serializer.SerializationContext ctx) {
        generator.writeStartObject();
        {{#vars}}
        ctx.serialize("{{baseName}}", obj.{{getter}}(), generator);
        {{/vars}}
        generator.writeEnd();
    }

    @Override
    public {{classname}} deserialize(
            final javax.json.stream.JsonParser parser,
            final javax.json.bind.serializer.DeserializationContext ctx,
            final java.lang.reflect.Type rtType) {
        return fromJsonObject(ctx.deserialize(javax.json.JsonObject.class, parser));
    }

    public static {{classname}} fromJsonObject(
            final javax.json.JsonObject jsonObject) {
        return {{classname}}.builder()
                   {{#vars}}{{{deserializer}}}{{/vars}}
                            .build();
    }

    public static java.util.List<{{classname}}> fromJsonArray(
            final javax.json.JsonArray jsonArray) {
        return jsonArray.stream().map(jsonValue -> fromJsonObject(jsonValue.asJsonObject())).collect(java.util.stream.Collectors.toList());
    }
}
{{/model}}{{/models}}
